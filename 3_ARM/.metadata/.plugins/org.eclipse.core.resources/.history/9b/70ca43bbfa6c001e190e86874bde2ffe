/*
 * MTIMER_Interface.h
 *
 *  Created on: Oct 16, 2023
 *      Author: Ahmed
 */

#ifndef MTIMER_INTERFACE_H_
#define MTIMER_INTERFACE_H_


/********************************************************************************************/
/************************************* Extern Configuration *********************************/
/********************************************************************************************/
extern TIMER_configType Timer_configuration;





/********************************************************************************************/
/************************************* GPT INDEX ********************************************/
/********************************************************************************************/
typedef enum{
	TIMER2_SELECTION,TIMER5__SELECTION,TIMER3__SELECTION,TIMER4__SELECTION
}TIMER_IDType;

typedef enum{
	COUNT_UP,COUNT_DOWN
}TIMER_CountModeType;

typedef  u32 TIMER_AutoReloadType;

typedef  u32 TIMER_PrescalerType;

typedef enum{
	TIMER_INPUT_CAPTURE,TIMER_OUTPUT_COMPARE,TIMER_PWM,TIMER_ONE_PULSE_MODE
}TIMER_ModeType;


typedef enum{
	TIMER_ARR_NOT_BUFFERED,
	TIMER_ARR_BUFFERED
}TIMER_AutoReloadPreloadType;


typedef enum{
	TIMER_EGDE_ALIGNED_MODE,
	TIMER_CENTER_ALIGNED_MODE_1,
	TIMER_CENTER_ALIGNED_MODE_2,
	TIMER_CENTER_ALIGNED_MODE_3
}TIMER_CenterAlignedMode;



typedef enum{
	TIMER_NO_STOP,
	TIMER_ONE_PULSE

}TIMER_OnePulseType;

typedef u32 TIMER_Ton_Value;


typedef enum{
	TIMER_ANY_EVENT_GENERATE_UPDATE_INTERRUPT_OR_DMA_REQUEST,
	TIMER_ONLY_COUNTER_OVF_UNF_GENERATE
}TIMER_UpdateRequestSourceType;

typedef struct{
	TIMER_IDType timer_id;
	TIMER_AutoReloadPreloadType PreloadType;
	TIMER_CenterAlignedMode AlignedType;
	TIMER_CountModeType CountMode;
	TIMER_OnePulseType OnePulseMode;
	TIMER_UpdateRequestSourceType UpdateRequestSource;
	TIMER_ModeType Mode;

	TIMER_AutoReloadType ReloadValue;

	TIMER_Ton_Value OnValue;

	TIMER_PrescalerType PrescalerValue;
}TIMER_configType;









void TIMER_Init(TIMER_configType *Configuration);

void TIMER_Start(TIMER_IDType Timer_Number);

void TIMER_DeInit(TIMER_IDType Timer_Number);

#endif /* MTIMER_INTERFACE_H_ */
